---
import { getLanguageFromFilename } from "@src/lib/translations";
import PostLayout from "@src/layouts/PostLayout.astro";

export const allPosts = () => Astro.glob("../../../lib/posts/**/*.{md,mdx}");

export async function getStaticPaths() {
    const paths = (await allPosts()).map((post) => {
        const locale = getLanguageFromFilename(post.file);

        return {
            params: {
                locale: locale,
                slug: post.frontmatter.translationKey,
            },

            props: {
                locale: locale,
                post: { ...post, locale },
            },
        };
    });
    return paths.filter(({ params }) => !!params.locale && !!params.slug);
}

const { locale, post } = Astro.props;

const alternativeLanguages = (await allPosts())
    .filter(
        (p) => p.frontmatter.translationKey === post.frontmatter.translationKey
    )
    .map((p) => getLanguageFromFilename(p.file))
    .filter((l) => l !== locale);

const alternativeLanguageMap: { [key: string]: string } =
    alternativeLanguages.reduce((acc, lang) => {
        return {
            ...acc,
            [lang]: `../${lang}/${post.frontmatter.translationKey}`,
        };
    }, {});
---

<PostLayout {alternativeLanguageMap} {locale} post={post}>
    <post.Content />
</PostLayout>
